{"version":3,"sources":["app.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","httpGet","theUrl","Promise","resolve","reject","page","XMLHttpRequest","addEventListener","evt","JSON","parse","this","responseText","error","open","send","httpDelete","mealEntryForm","meal","form","document","createElement","setAttribute","label","input","innerText","value","name","appendChild","innerHTML","select","types","forEach","typ","type","meal_type","options","textarea","key","stringify","concat","replace","console","log","populateMealDBList","LOCAL_HOST","then","all_meals","dsp_meals","getElementById","meal_addr","_id","entry_parent","entry_del_button","meal_entry_form","submit","confirm","parentNode","removeChild","POSTMealEntryForm","title","FNAME","URL","substr","lastIndexOf"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar LOCAL_HOST = 'http://localhost:5000/';\nvar FNAME = document.URL.substr(document.URL.lastIndexOf('/')+1);\n\nfunction capitaliseEachWord(str) {\n    return str.replace(/\\w\\S*/g, function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n}\n\nfunction GetHeaders(theUrl){\n  var req = new XMLHttpRequest();\n  req.open('GET', theUrl, false);\n  req.send(null);\n  var headers = req.getAllResponseHeaders().toLowerCase();\n  alert(headers);\n}\n\nfunction httpGet(theUrl) {\n    return new Promise( function(resolve, reject) {\n        var page = new XMLHttpRequest();\n        page.addEventListener('load', function(evt){\n            resolve(JSON.parse(this.responseText));\n        });\n        page.addEventListener('error', function(error){\n            reject(error);\n        });\n        page.open(\"GET\", theUrl);\n        page.send();\n\n    });\n};\n\nfunction httpPut(theUrl) {\n    return new Promise( function(resolve, reject) {\n        var page = new XMLHttpRequest();\n        page.addEventListener('load', function(evt){\n            resolve(JSON.parse(this.responseText));\n        });\n        page.addEventListener('error', function(error){\n            reject(error);\n        });\n        page.open(\"PUT\", theUrl);\n        page.send();\n    });\n};\n\nfunction httpDelete(theUrl) {\n    var page = new XMLHttpRequest();\n    page.open(\"DELETE\", theUrl);\n    // if (page.readyState == 4 && page.status == 200){\n    page.send();\n    // }\n};\n\n\nfunction mealEntryForm(meal) {\n\n  var form = document.createElement('form');\n  form.setAttribute('action', \"http://localhost:5000/api/meals/\");\n  form.setAttribute('class', 'meal-edit-form');\n\n  var label = document.createElement('label');\n  var input = document.createElement('input');\n\n  label.setAttribute('class', 'field');\n  label.setAttribute('for', 'name');\n  label.innerText = 'Name';\n\n  input.setAttribute('type', 'text');\n  input.setAttribute('name', 'name');\n  try {\n    // input.setAttribute('placeholder', meal.name);\n    input.value = meal.name;\n  } catch(e){};\n\n  form.appendChild(label);\n  form.appendChild(input);\n\n  var label = document.createElement('label');\n  label.setAttribute('for', 'meal type');\n  label.innerHTML = 'Meal Type';\n  form.appendChild(label);\n\n  var select = document.createElement('select');\n  select.setAttribute('name', 'meal type');\n  select.setAttribute('value', 'Meal');\n\n  var types = ['dinner','breakfast','lunch','snack'];\n  types.forEach( function(typ) {\n    var type = document.createElement('option');\n    type.setAttribute('value', typ);\n    type.innerHTML = typ;\n    try{\n      if (typ == meal.meal_type) {\n        type.setAttribute('selected', 'selected');\n      };\n    } catch (e){};\n    select.appendChild(type);\n    form.appendChild(select);\n  });\n\n  options = ['ingredients','method'];\n  options.forEach( function(o) {\n    var option = document.createElement('option');\n    var label = document.createElement('label');\n\n    label.setAttribute('for', o);\n    label.innerHTML = o;\n\n    var textarea = document.createElement('textarea');\n    textarea.setAttribute('name', o);\n    textarea.setAttribute('rows', 10);\n    textarea.setAttribute('cols', 30);\n    try{\n      for (key in meal[o]){\n        textarea.value += JSON.stringify(meal[o][key]).concat(\" \", JSON.stringify(key), \"\\r\\n\").replace(/[\",]/g,\"\");\n      }\n    } catch(e) {console.log(e)};\n    label.appendChild(textarea);\n    form.appendChild(label);\n  });\n\n  return form;\n\n};\n\n\nfunction populateMealDBList() {\n\n  // populate database list of meals with functionality\n\n  httpGet(LOCAL_HOST.concat('api/meals/')).then( function (all_meals) {\n\n    if (all_meals.length < 1){\n\n      console.log(\"no meals in database!\");\n\n    } else {\n\n      var dsp_meals = document.getElementById('db-meal-list');\n\n      all_meals.forEach( function(meal) {\n\n        var meal_addr = LOCAL_HOST.concat('api/meals/_id/<value>').replace('<value>', meal._id);\n        var entry_parent = document.createElement('div');\n        var entry_major = document.createElement(\"p\");\n        var entry_minor = document.createElement(\"p\");\n        var entry_del_button = document.createElement('button');\n        var edit_open = 0;\n        var meal_entry_form = mealEntryForm(meal);\n        var submit = document.createElement('input');\n\n        submit.setAttribute('type','Submit');\n        submit.setAttribute('value','Submit');\n        submit.addEventListener('click', function(evt){\n          console.log(\"post\");\n          // httpPut(meal_addr, update);\n        });\n\n        entry_parent.setAttribute('id', meal._id);\n        entry_del_button.innerHTML = 'Delete';\n        entry_del_button.addEventListener('click', function(evt) {\n          if (confirm(\"Are you sure you want to permenantly remove this meal?\")) {\n            httpDelete(meal_addr);\n            entry_parent.parentNode.removeChild(entry_parent);\n          }\n        });\n\n        meal_entry_form.appendChild(submit);\n        entry_parent.appendChild(meal_entry_form);\n        entry_parent.appendChild(entry_del_button);\n        dsp_meals.appendChild(entry_parent);\n\n      });\n    }\n  });\n};\n\n\nfunction POSTMealEntryForm() {\n\n  var meal_entry_form = mealEntryForm();\n  var title = document.getElementById('entries');\n  var submit = document.createElement('input');\n  submit.setAttribute('type','submit');\n  submit.setAttribute('value','Submit');\n  meal_entry_form.setAttribute('method', 'POST');\n  meal_entry_form.appendChild(submit);\n  title.appendChild(meal_entry_form);\n\n};\n\n\n\n\n// main\nif (FNAME == 'meal_search.html'){\n\n  populateMealDBList();\n\n} else if (FNAME == 'meal_entry_form.html') {\n\n  POSTMealEntryForm();\n\n}\n\n},{}]},{},[1]);\n"]}